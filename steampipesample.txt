Table: aws_s3_bucket

An Amazon S3 bucket is a public cloud storage resource available in Amazon Web Services' (AWS) Simple Storage Service (S3), an object storage offering.
Examples

Basic info
select
  name,
  region,
  account_id,
  bucket_policy_is_public
from
  aws_s3_bucket;

List buckets with versioning disabled
select
  name,
  region,
  account_id,
  versioning_enabled
from
  aws_s3_bucket
where
  not versioning_enabled;

List buckets with default encryption disabled

select
  name,
  server_side_encryption_configuration
from
  aws_s3_bucket
where
  server_side_encryption_configuration is null;

List buckets that do not block public access

select
  name,
  block_public_acls,
  block_public_policy,
  ignore_public_acls,
  restrict_public_buckets
from
  aws_s3_bucket
where
  not block_public_acls
  or not block_public_policy
  or not ignore_public_acls
  or not restrict_public_buckets;

List buckets that block public access through bucket policies

select
  name,
  bucket_policy_is_public
from
  aws_s3_bucket
where
  bucket_policy_is_public;

List buckets where the server access logging destination is the same as the source bucket

select
  name,
  logging ->> 'TargetBucket' as target_bucket
from
  aws_s3_bucket
where
  logging ->> 'TargetBucket' = name;

List buckets without the 'application' tags key

select
  name,
  tags ->> 'fizz' as fizz
from
  aws_s3_bucket
where
  tags ->> 'application' is not null;

List buckets that enforce encryption in transit

select
  name,
  p as principal,
  a as action,
  s ->> 'Effect' as effect,
  s ->> 'Condition' as conditions,
  ssl
from
  aws_s3_bucket,
  jsonb_array_elements(policy_std -> 'Statement') as s,
  jsonb_array_elements_text(s -> 'Principal' -> 'AWS') as p,
  jsonb_array_elements_text(s -> 'Action') as a,
  jsonb_array_elements_text(s -> 'Condition' -> 'Bool' -> 'aws:securetransport') as ssl
where
  p = '*'
  and s ->> 'Effect' = 'Deny'
  and ssl :: bool = false;

List buckets that do not enforce encryption in transit

select
  name
from
  aws_s3_bucket
where
  name not in (
    select
      name
    from
      aws_s3_bucket,
      jsonb_array_elements(policy_std -> 'Statement') as s,
      jsonb_array_elements_text(s -> 'Principal' -> 'AWS') as p,
      jsonb_array_elements_text(s -> 'Action') as a,
      jsonb_array_elements_text(s -> 'Condition' -> 'Bool' -> 'aws:securetransport') as ssl
    where
      p = '*'
      and s ->> 'Effect' = 'Deny'
      and ssl :: bool = false
  );

List bucket policy statements that grant external access for each bucket

select
  title,
  p as principal,
  a as action,
  s ->> 'Effect' as effect,
  s -> 'Condition' as conditions
from
  aws_s3_bucket,
  jsonb_array_elements(policy_std -> 'Statement') as s,
  jsonb_array_elements_text(s -> 'Principal' -> 'AWS') as p,
  string_to_array(p, ':') as pa,
  jsonb_array_elements_text(s -> 'Action') as a
where
  s ->> 'Effect' = 'Allow'
  and (
    pa [ 5 ] != account_id
    or p = '*'
  );

List buckets with object lock enabled

select
  name,
  object_lock_configuration ->> 'ObjectLockEnabled' as object_lock_enabled
from
  aws_s3_bucket
where
  object_lock_configuration ->> 'ObjectLockEnabled' = 'Enabled';

List buckets with website hosting enabled

select
  name,
  website_configuration -> 'IndexDocument' ->> 'Suffix' as suffix
from
  aws_s3_bucket
where
  website_configuration -> 'IndexDocument' ->> 'Suffix' is not null;

List object ownership control rules of buckets

select
  b.name,
  r ->> 'ObjectOwnership' as object_ownership
from
  aws_s3_bucket as b,
  jsonb_array_elements(object_ownership_controls -> 'Rules') as r;
  
  
  
Table: aws_ec2_instance

An AWS EC2 instance is a virtual server in the AWS cloud.
Examples
Instance count in each availability zone

select
  placement_availability_zone as az,
  instance_type,
  count(*)
from
  aws_ec2_instance
group by
  placement_availability_zone,
  instance_type;

List instances whose detailed monitoring is not enabled

select
  instance_id,
  monitoring_state
from
  aws_ec2_instance
where
  monitoring_state = 'disabled';

Count the number of instances by instance type

select
  instance_type,
  count(instance_type) as count
from
  aws_ec2_instance
group by
  instance_type;

List instances stopped for more than 30 days

select
  instance_id,
  instance_state,
  launch_time,
  state_transition_time
from
  aws_ec2_instance
where
  instance_state = 'stopped'
  and state_transition_time <= (current_date - interval '30' day);

List of instances without application tag key

select
  instance_id,
  tags
from
  aws_ec2_instance
where
  not tags :: JSONB ? 'application';

Get maintenance options for each instance

select
  instance_id,
  instance_state,
  launch_time,
  maintenance_options ->> 'AutoRecovery' as auto_recovery
from
  aws_ec2_instance;

Get license details for each instance

select
  instance_id,
  instance_type,
  instance_state,
  l ->> 'LicenseConfigurationArn' as license_configuration_arn
from
  aws_ec2_instance,
  jsonb_array_elements(licenses) as l;

Get placement group details for each instance

select
  instance_id,
  instance_state,
  placement_affinity,
  placement_group_id,
  placement_group_name,
  placement_availability_zone,
  placement_host_id,
  placement_host_resource_group_arn,
  placement_partition_number,
  placement_tenancy
from
  aws_ec2_instance;

List of EC2 instances provisioned with undesired(for example t2.large and m3.medium is desired) instance type(s).

select
  instance_type,
  count(*) as count
from
  aws_ec2_instance
where
  instance_type not in ('t2.large', 'm3.medium')
group by
  instance_type;

List EC2 instances having termination protection safety feature enabled

select
  instance_id,
  disable_api_termination
from
  aws_ec2_instance
where
  not disable_api_termination;

Find instances which have default security group attached

select
  instance_id,
  sg ->> 'GroupId' as group_id,
  sg ->> 'GroupName' as group_name
from
  aws_ec2_instance
  cross join jsonb_array_elements(security_groups) as sg
where
  sg ->> 'GroupName' = 'default';

List the unencrypted volumes attached to the instances

select
  i.instance_id,
  vols -> 'Ebs' ->> 'VolumeId' as vol_id,
  vol.encrypted
from
  aws_ec2_instance as i
  cross join jsonb_array_elements(block_device_mappings) as vols
  join aws_ebs_volume as vol on vol.volume_id = vols -> 'Ebs' ->> 'VolumeId'
where
  not vol.encrypted;

List instances with secrets in user data

select
  instance_id,
  user_data
from
  aws_ec2_instance
where
  user_data like any (array [ '%pass%', '%secret%', '%token%', '%key%' ])
  or user_data ~ '(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]';

Get launch template data for the instances

select
  instance_id,
  launch_template_data -> 'ImageId' as image_id,
  launch_template_data -> 'Placement' as placement,
  launch_template_data -> 'DisableApiStop' as disable_api_stop,
  launch_template_data -> 'MetadataOptions' as metadata_options,
  launch_template_data -> 'NetworkInterfaces' as network_interfaces,
  launch_template_data -> 'BlockDeviceMappings' as block_device_mappings,
  launch_template_data -> 'CapacityReservationSpecification' as capacity_reservation_specification
from
  aws_ec2_instance;
  
  
  
  
 

inspect aws_s3_bucket

AWS S3 Bucket
Name	Type	Description
_ctx	jsonb	Steampipe context in JSON form, e.g. connection_name.
account_id	text	The AWS Account ID in which the resource is located.
acl	jsonb	The access control list (ACL) of a bucket.
akas	jsonb	Array of globally unique identifier strings (also known as) for the resource.
arn	text	The ARN of the AWS S3 Bucket.
block_public_acls	boolean	Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket.
block_public_policy	boolean	Specifies whether Amazon S3 should block public bucket policies for this bucket. If TRUE it causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.
bucket_policy_is_public	boolean	The policy status for an Amazon S3 bucket, indicating whether the bucket is public.
creation_date	timestamp with time zone	The date and time when bucket was created.
event_notification_configuration	jsonb	A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket.
ignore_public_acls	boolean	Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.
lifecycle_rules	jsonb	The lifecycle configuration information of the bucket.
logging	jsonb	The logging status of a bucket and the permissions users have to view and modify that status.
name	text	The user friendly name of the bucket.
object_lock_configuration	jsonb	The specified bucket's object lock configuration.
object_ownership_controls	jsonb	The Ownership Controls for an Amazon S3 bucket.
partition	text	The AWS partition in which the resource is located (aws, aws-cn, or aws-us-gov).
policy	jsonb	The resource IAM access document for the bucket.
policy_std	jsonb	Contains the policy in a canonical form for easier searching.
region	text	The AWS Region in which the resource is located.
replication	jsonb	The replication configuration of a bucket.
restrict_public_buckets	boolean	Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS service principals and authorized users within this account if the bucket has a public policy.
server_side_encryption_configuration	jsonb	The default encryption configuration for an Amazon S3 bucket.
tags	jsonb	A map of tags for the resource.
tags_src	jsonb	A list of tags assigned to bucket.
title	text	Title of the resource.
versioning_enabled	boolean	The versioning state of a bucket.
versioning_mfa_delete	boolean	The MFA Delete status of the versioning state.
website_configuration	jsonb	The website configuration information of the bucket.
  

